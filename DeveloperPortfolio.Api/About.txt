The steps to create this solution:

1. Create the Balzor WebAssembly project (later on referred to as Web).

2. Create the ASP.NET Core Web API project (later on referred to as Api).

3. Add the Entities folder to Api.

4. Add the following classes to the Entities folder in Api:
	- Project
	- Category
	- Tech
	- Link
	- ProjectTechRelation (used to associate projects with the technologies it uses)

5. Add solution to version control (Git) and create the DeveloperPortfolio repo on Github.

6. Install the following packages in the Dependencies folder in Api:
	- Microsoft.EntityFrameworkCore.SqlServer 
	- Microsoft.EntityFrameworkCore.Tools

7. Create the Data folder in Api and add the DeveloperPortfolioDbContext class that inherits DbContext to it.

8. Override the OnModelCreating method in the DeveloperPortfolioDbContext class to seed the database.
   Also create a DbSet property for each entity to let Entity Framework know about them.

9. Register the DeveloperPortfolioDbContext for dependency injection in the Program class.

10. Create the DeveloperPortfolioDB database in SQLServer and get the connection string.

11. Run a migration and update the database to add the tables to the database.

12. Add a Class Library project to the solution for the Data Transfer Object (dto) classes.
    Name it DeveloperPortfolio.Models (later on referred to as Models).

13. Create the Dtos folder in Models and add the Data Transfer Object (dto) classes to it.

14. Add the Repositories folder to Api. Create the Contracts folder in it and add the IProjectRepository 
    interface to it. Implement the ProjectRepository class that implements the interface.
